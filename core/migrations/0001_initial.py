# Generated by Django 4.2.23 on 2025-07-31 18:27

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='site/screenshots/')),
            ],
        ),
        migrations.CreateModel(
            name='SiteService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título do serviço', max_length=200, verbose_name='Título')),
                ('subtitle', models.CharField(blank=True, help_text='Frase menor ou slogan do serviço', max_length=300, verbose_name='Subtítulo')),
                ('slug', models.SlugField(help_text='URL amigável (gerado automaticamente a partir do título)', max_length=200, unique=True, verbose_name='Slug')),
                ('icon_class', models.CharField(blank=True, help_text="Por exemplo: 'fas fa-robot' ou 'flaticon-puzzle'", max_length=100, verbose_name='Classe de Ícone')),
                ('excerpt', models.TextField(blank=True, help_text='Pequena descrição usada na listagem', verbose_name='Resumo')),
                ('body', ckeditor.fields.RichTextField(help_text='Texto completo, com formatação (CKEditor)', verbose_name='Conteúdo')),
                ('tags', models.CharField(blank=True, default='', help_text='Separe as tags por vírgula', max_length=255, verbose_name='Tags')),
                ('is_active', models.BooleanField(default=True, help_text='Desmarque para ocultar da página pública', verbose_name='Publicado')),
                ('order', models.PositiveIntegerField(default=0, help_text='Define a ordem de exibição; menor vem primeiro', verbose_name='Ordem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ('order', 'title'),
            },
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('is_active', models.BooleanField(default=False, verbose_name='Ativo')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='site/images/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/images/')),
                ('logo_footer', models.ImageField(blank=True, null=True, upload_to='site/images/')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='site/images/')),
                ('widget_image', models.ImageField(blank=True, null=True, upload_to='site/images/')),
                ('auto_image', models.ImageField(blank=True, null=True, upload_to='site/images/')),
                ('instagram', models.URLField(blank=True, null=True)),
                ('whatsapp', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', models.CharField(blank=True, default='', help_text='Palavras‑chave separadas por vírgula para SEO', max_length=255, verbose_name='Tags')),
                ('meta_title', models.CharField(blank=True, default='', help_text='Título para title e Open Graph (até ~60 caracteres)', max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, default='', help_text='Descrição para meta description e OG (até ~160 caracteres)', max_length=160, verbose_name='Meta Description')),
                ('about_body', ckeditor.fields.RichTextField(blank=True, default='', help_text='Texto livre (HTML simples) para a seção Sobre Nós', verbose_name='Corpo Sobre Nós')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('screenshot', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='siteconfig_via', to='core.screenshot', verbose_name='Screenshot de destaque')),
            ],
            options={
                'verbose_name': 'Configuração do Site',
                'verbose_name_plural': 'Configurações do Site',
            },
        ),
        migrations.AddField(
            model_name='screenshot',
            name='siteconfig',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='core.siteconfig'),
        ),
        migrations.CreateModel(
            name='HistoricalSiteConfig',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Nome')),
                ('is_active', models.BooleanField(default=False, verbose_name='Ativo')),
                ('favicon', models.TextField(blank=True, max_length=100, null=True)),
                ('logo', models.TextField(blank=True, max_length=100, null=True)),
                ('logo_footer', models.TextField(blank=True, max_length=100, null=True)),
                ('hero_image', models.TextField(blank=True, max_length=100, null=True)),
                ('widget_image', models.TextField(blank=True, max_length=100, null=True)),
                ('auto_image', models.TextField(blank=True, max_length=100, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('whatsapp', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', models.CharField(blank=True, default='', help_text='Palavras‑chave separadas por vírgula para SEO', max_length=255, verbose_name='Tags')),
                ('meta_title', models.CharField(blank=True, default='', help_text='Título para title e Open Graph (até ~60 caracteres)', max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, default='', help_text='Descrição para meta description e OG (até ~160 caracteres)', max_length=160, verbose_name='Meta Description')),
                ('about_body', ckeditor.fields.RichTextField(blank=True, default='', help_text='Texto livre (HTML simples) para a seção Sobre Nós', verbose_name='Corpo Sobre Nós')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('screenshot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.screenshot', verbose_name='Screenshot de destaque')),
            ],
            options={
                'verbose_name': 'historical Configuração do Site',
                'verbose_name_plural': 'historical Configurações do Site',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
